<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | @statwonk]]></title>
  <link href="http://statwonk.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://statwonk.github.io/"/>
  <updated>2014-02-16T13:42:48-05:00</updated>
  <id>http://statwonk.github.io/</id>
  <author>
    <name><![CDATA[Christopher P. Peters]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Are academics adopting Github?]]></title>
    <link href="http://statwonk.github.io/blog/2013/12/15/are-academics-adopting-github/"/>
    <updated>2013-12-15T20:27:00-05:00</updated>
    <id>http://statwonk.github.io/blog/2013/12/15/are-academics-adopting-github</id>
    <content type="html"><![CDATA[<p>As the partner of one of the &ldquo;Piled Higher, and Deeper&rdquo; (a Ph.D student) crowd and also a data
scientist, I couldn&rsquo;t help but introduce the &lsquo;git-way&rsquo; to Gentry.</p>

<p>She&rsquo;s a geographer at Queen&rsquo;s university.  <strong>Like me, she&rsquo;s tech savvy, but coding
is new to her.  Human geography, her field, is largely qualitative like the rest
of the humanities.</strong></p>

<p><a href="http://i.imgur.com/PDQx8tf.jpg">{% imgcap right http://i.imgur.com/PDQx8tf.jpg 350 550 &ldquo;An academic&rsquo;s console command cheat sheet&rdquo; %}</a></p>

<p>At the end of her previous degree, I helped her cope with MS Word as it struggled under the weight of a 100+ page thesis.  We expanded the memory on her laptop.  She had &ldquo;sub-docs&rdquo; everywhere.  Bits and pieces of thoughts  put to the side, worked on independently, temporarily stricken.  But how to keep track of it all?</p>

<p>I was learning Git at the same time on my path from statistician to data scientist.</p>

<p>A year later, I&rsquo;ve come to use git and Github on a daily-basis.  I&rsquo;ve moved
from an academic statistician to a commercial data scientist.  I work with a
team of developers, and the Git-way has become really the only way for keeping track
of my projects.</p>

<p>Now, Gentry is working on her dissertation.  As a first step into coding, she&rsquo;s been learning LaTeX.  She&rsquo;s sold because she can annotate her own dissertation with comments.</p>

<p>For those unfamiliar, LaTeX is a typsetting language. It creates beautiful documents with high-level style control. I recommend it to anyone that&rsquo;s ever tried to do formatting in
MS Word. :&ndash;)</p>

<p>LaTeX is also largely confined to academia.  I&rsquo;m not saying they don&rsquo;t exist,
but I haven&rsquo;t met anyone that uses LaTeX who is not also an academic.</p>

<p><strong>Now that Gentry was coding her dissertation, using Git and Github were open to
her as tools.</strong></p>

<p>I commonly relate Github to my non-programming friends by telling them it&rsquo;s the
Facebook of code and programmers.  People instantly get this analogy.  &ldquo;Oh, so
it lets you be social and interact?&rdquo;</p>

<p>&ldquo;Precisely, but with code.&rdquo;</p>

<p>Github is perfect for academics.  If they can use it by coding with LaTeX, even
non-quantitative academics can work socially and openly (which is possibly more
important).</p>

<p>Gentry&rsquo;s sold and she&rsquo;s been been learning Git with my co-worker Tommy Morgan.  Tommy
teaches an <a href="http://teamtreehouse.com/library/git-basics">excellent lesson on Git at Treehouse</a>.  As I was speaking with the Co-Founder Ryan Carson last week, I wondered out loud, &ldquo;how many academics out there are using Git (and Github)?&rdquo;</p>

<p>Today, you get the benefit of that curiousity. <strong>Are academics adopting
Github?</strong></p>

<p>Assuming that LaTeX is a good proxy for academic use of Github, <strong>yes, academics
have been creating Github repositories at basically an exponential rate since
the beginning of 2011</strong> and the pace has really picked up since August 2013.
(makes sense given that it&rsquo;s the school year).</p>

<p>{% img center <a href="http://i.imgur.com/bVA4Pa9.png">http://i.imgur.com/bVA4Pa9.png</a> %}</p>

<p>&hellip;and on a log-scale (notice that the growth is linear on this scale), that means
it&rsquo;s exponential growth since the beginning of 2011.</p>

<p>{% img center <a href="http://i.imgur.com/hmI9mpb.png">http://i.imgur.com/hmI9mpb.png</a> %}</p>

<p>This is just a raw look at the number of LaTeX repositories on Github by month.
But I don&rsquo;t think the data needs to be spoiled by over-analysis.  As a next
step, I&rsquo;d like to try forecasting the growth rate of these repositories by using
the growth rates of other repositories.</p>

<p>The idea of git and Github is so powerful, that I bet the academic community
falls in love as much as the programming world has.  I also predict that those
academics who adopt first will have a sigificant competitive advantage over
their peers.  This is in an increasingly competitive job market where
Ph.D-candidate after candidate hit a brick wall when searching for a
tenure-track position.</p>

<p>This data scientist is very proud of his human geographer for using version
control in the place of snippets of MS Word documents.</p>

<p>For those interested, the code I used to do this analysis was a mix of Python
and R.  Here&rsquo;s the <a href="https://github.com/statwonk/academic-github-adoption">Github repo</a>, and relevant code snippets:</p>

<p>{% codeblock lang:python %}
import requests
import json
import csv
import time</p>

<p>times = [&ldquo;2010&rdquo;, &ldquo;2011&rdquo;, &ldquo;2012&rdquo;]
for i in range(0, 12):
  times.append(str(str(2013) + &ldquo;&ndash;&rdquo; + str(i + 1)))</p>

<p>df = {}
for j in times:</p>

<pre><code>for i in range(1, 10):
    # print "Sleeping 15 seconds ... "
    time.sleep(60/4)
    r = requests.get('https://api.github.com/search/repositories?q=language:latex&amp;' + \
                     'page=' + str(i) + '&amp;per_page=100' + \
                     '&amp;created=' + str(j))
    if(r.ok):
        repoItem = json.loads(r.content)
        print "page " + str(i) + ", year " + str(j)
        for repo in repoItem['items']:
            df[repo['name']] = repo['created_at']
    else: print "oh nos! Page " + str(i) + " has a problem"
</code></pre>

<p>with open(&lsquo;data.csv&rsquo;, &lsquo;wb&rsquo;) as csvfile:</p>

<pre><code>writer = csv.writer(csvfile, delimiter= ',')
for i in df.keys():
    writer.writerow((i, df[i]))
</code></pre>

<p>{% endcodeblock %}</p>

<p>&hellip; admittedly pretty basic.  Just learning Python! Plotting was done in R&rsquo;s
<code>ggplot2</code> library.</p>

<p>{% codeblock lang:r %}
library(ggplot2)
library(lubridate)
library(ggthemes)</p>

<p>df &lt;&ndash; read.csv(&ldquo;data.csv&rdquo;, header = F)
names(df) &lt;&ndash; c(&ldquo;repo&rdquo;, &ldquo;created_at&rdquo;)
df$created_at &lt;&ndash; as.POSIXct(df$created_at)
df &lt;&ndash; df[df$created_at &lt; max(df$created_at) &ndash; days(14), ]</p>

<p>ggplot(df, aes(x = created_at)) +
  scale_y_continuous(breaks = seq(0, 150, 25)) +
  geom_hline(yintercept = 25, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_hline(yintercept = 50, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_hline(yintercept = 75, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_hline(yintercept = 100, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_hline(yintercept = 125, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_histogram(colour = &ldquo;black&rdquo;, fill = &ldquo;tan&rdquo;, binwidth = 60<em>60</em>24*30.5, stat = &ldquo;bin&rdquo;) +
  xlab(&ldquo;&rdquo;) +
  ylab(&ldquo;&rdquo;) +
  ggtitle(&ldquo;Public Github Repositories\nwritten in LaTeX per Month&rdquo;) +
  theme_solarized(light = F) +
  theme(axis.text.x = element_text(size = 32),</p>

<pre><code>    axis.text.y = element_text(size = 28),
    plot.title = element_text(size = 30))
</code></pre>

<p>ggplot(df, aes(x = created_at)) +
  scale_y_log10() +
  geom_hline(yintercept = 10, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_hline(yintercept = 100, colour = &ldquo;red&rdquo;, linetype=&ldquo;dotted&rdquo;) +
  geom_histogram(colour = &ldquo;black&rdquo;, fill = &ldquo;tan&rdquo;, binwidth = 60<em>60</em>24*30.5, stat = &ldquo;bin&rdquo;) +
  xlab(&ldquo;&rdquo;) +
  ylab(&ldquo;(Log scale)&rdquo;) +
  ggtitle(&ldquo;Public Github Repositories\nwritten in LaTeX per Month&rdquo;) +
  theme_solarized(light = F) +
  theme(axis.title.y = element_text(size = 25),</p>

<pre><code>    axis.text.x = element_text(size = 32),
    axis.text.y = element_text(size = 28),
    plot.title = element_text(size = 30))
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
